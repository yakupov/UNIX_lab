#!/bin/bash -e

function downloadFile {
	echo $CURRFILE
	wget $CURRFILE
}

function processLink {
	DOWNLOADPATH=~/Downloads/fetched4you
	echo $DOWNLOADPATH
	if [ ! -d $DOWNLOADPATH ]; then
		mkdir $DOWNLOADPATH
		echo "Created $DOWNLOADPATH"
	fi

	DOWNLOADPATH=$DOWNLOADPATH"/"$REFERRER
	if [ ! -d $DOWNLOADPATH ]; then
		mkdir $DOWNLOADPATH
		echo "Created $DOWNLOADPATH"
	fi

	DOWNLOADPATH=$DOWNLOADPATH"/"$URL
	if [ ! -d $DOWNLOADPATH ]; then
		mkdir $DOWNLOADPATH
		echo "Created $DOWNLOADPATH"
	fi

	wget --spider 1>/dev/null 2>/dev/null $URL
	if [ $? -ne 0 ]; then
		echo 1>&2 "File $URL does not exist or is inaccessible"
	fi

	########TODO: generate download request and put it in QQEDIR
}


function processQueue {
	LOCKFILE=QQEDIR/.fetch4me_lock

	if [ -f $LOCKFILE ]; then
		##check, if that process is still running
		OLDPROC=`cat $LOCKFILE`
		PROC=(`ps -e | grep fetch4me | grep -v "grep" | awk '{print $1;}'`)
		for ((i=0; i<${#PROC[@]}; i++)); do
			if [ ${PROC[$i]} = OLDPROC ]; then
				echo "Daemon is already running in $QQEDIR"
				exit 0
			fi
		done

		####TODO: continue downloads

	else
		#daemonize
		echo $$ > $LOCKFILE
		trap "echo 'fuck off'" SIGHUP

		#process queue
		until [ -z `ls $QQEDIR` ]; do
			QUEUE=`ls $QQEDIR`
			CURRFILE=$QQEDIR"/"${QUEUE[0]}
			downloadFile
			rm $CURRFILE
		done
	fi

	rm LOCKFILE
	exit 0
}


GETELEMFUNC=`cat ~/.fetch4merc | grep GETELEMFUNC | awk '{ split ($0, arr, "="); print arr[2]; }'`
QQEDIR=`cat ~/.fetch4merc | grep QQEDIR | awk '{ split ($0, arr, "="); print arr[2]; }'`

#convert relative path to abs. path
TMP=`echo $QQEDIR | sed 's/~//g'`
if [ ! "$TMP" = "$QQEDIR" ]; then
	QQEDIR=$HOME$TMP
fi

FIRSTARG=0

if [ $1 = "-w" ]; then
	QQEDIR=$2
	FIRSTARG=2
	if [ $3 = "-r" ]; then
		REFERRER=$4
		FIRSTARG=4
	fi
elif [ $1 = "-r" ]; then
	REFERRER=$2
	FIRSTARG=2
	if [ $3 = "-w" ]; then
		QQEDIR=$4
		FIRSTARG=4
	fi
fi

if [ -z $QQEDIR ]; then
	QQEDIR=~/.fetch4me
fi

if [ -z $GETELEMFUNC ]; then
	GETELEMFUNC="wget"
fi

echo $QQEDIR
echo $GETELEMFUNC

if [ ! -d $QQEDIR ]; then
	echo 'working dir does not exist'
	exit 1
fi

which $GETELEMFUNC 1>/dev/null 2>/dev/null
if [ $? -ne 0 ]; then
	echo 'elemfunc does not exist'
	exit 1
fi

ARGS=("$@")
for ((i=$FIRSTARG; i<${#ARGS[@]}; i++)); do
	if [ ${ARGS[${i}]} = "-r" ]; then
		i=`expr $i + 1`
		REFERRER=${ARGS[$i]}
		echo $REFERRER" is the new referrer"
	else
		URL=${ARGS[$i]}
		echo $URL
#		processLink
	fi
done 

#processQueue

##
## TODO: check, if QQEDIR and GETELEMFUNC exist, and if REFERRER is correct URL. If not - exit 1.
##

##
## TODO: search for "fetch4me.lock" in QQEDIR, if there is one - 
## look at PID and find out, is the daemon running or has it crashed
## If process is running - add new files to QQEDIR and exit 0. If not - try to 
## restart unfinished downloads, generate new lock file. Daemonize.
## If there's new lock file - generate new queue, daemonize.
##

##
## TODO: process all files from QQEDIR
##

##
## TODO: 'df -h' to find out, if there's enough space on disk. If not - exit 1.
##

